// Code generated by mockery v1.0.0. DO NOT EDIT.

package service

import (
	entity "github.com/postmanq/postmanq/module/pipe/entity"

	mock "github.com/stretchr/testify/mock"

	module "github.com/postmanq/postmanq/module"
)

// ComponentFactory is an autogenerated mock type for the ComponentFactory type
type ComponentFactory struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *ComponentFactory) Create(_a0 *entity.Component) (interface{}, error) {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(*entity.Component) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.Component) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0
func (_m *ComponentFactory) Register(_a0 module.ComponentDescriptor) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(module.ComponentDescriptor) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
